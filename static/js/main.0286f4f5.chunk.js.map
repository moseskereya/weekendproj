{"version":3,"sources":["components/images/logo.png","components/Nav.js","components/Banner.js","components/Recipe.js","About.js","Footer.js","components/Home.js","components/menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","state","datas","className","src","images","alt","to","Component","Banner","props","bannerimg","axios","get","then","response","setState","data","Math","floor","random","length","console","log","catch","error","myimg","this","style","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","imgUrl","name","Recipe","recipes","mydata","undefined","map","recipe","key","price","description","href","link","About","class","Footer","logo","Home","menu","App","path","exact","component","Menu","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0286f4f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9808a01e.png\";","import React, { Component } from 'react';\r\nimport images from \"./images/logo.png\"\r\nimport {Link} from 'react-router-dom'\r\nclass Nav extends Component {\r\n    state = {\r\n        datas: ''\r\n    }\r\n\r\n    render() { \r\n        return (\r\n                <div>\r\n                    \r\n                <nav className=\"nav\">\r\n                    <div className=\"logo\">\r\n                        <img src={images} alt=\"logo\" className=\"logo\"/>\r\n                    </div>\r\n                    <ul className=\"nav-item\">\r\n                        <Link className=\"link\" to=\"/\">\r\n                            <li>Home</li>\r\n                        </Link>\r\n                        <Link className=\"link\" to=\"/Menu\">\r\n                            <li>Menu</li>\r\n                        </Link>\r\n\r\n                    </ul>\r\n                </nav>\r\n                </div>\r\n           \r\n         );\r\n        }\r\n    }\r\n\r\n \r\nexport default Nav;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nclass Banner extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { bannerimg: ''}\r\n    }\r\n    componentDidMount() {\r\n         axios.get(\"https://mosesapi77.azurewebsites.net/recipes\")\r\n             .then(response => {\r\n                this.setState({bannerimg: response.data[Math.floor(Math.random() * response.data.length -1)]})\r\n                console.log(this.state.bannerimg)\r\n            })\r\n            .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n    render() { \r\n        const myimg = this.state.bannerimg;\r\n        return ( \r\n            <div className=\"banner\"\r\n                style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundImage: `url(${myimg.imgUrl})`\r\n                }}>\r\n                <section className=\"banner-item\">\r\n                     <h3>{myimg.name}</h3>\r\n                </section>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Banner;\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\"\r\nimport { Link } from 'react-router-dom';\r\nclass Recipe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { recipes: [] }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://mosesapi77.azurewebsites.net/recipes\")\r\n            .then(response => {\r\n                this.setState({ recipes: response.data})\r\n            })\r\n            .catch(error => {\r\n            console.log(error, \"There might no any data in your database\")\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const mydata = this.state.recipes\r\n        if (mydata === undefined || mydata.length === 0) {\r\n            return (\r\n                <dvi className=\"loading\">\r\n                     <div className=\"spin\"></div>\r\n                 </dvi>\r\n            )\r\n        } else {\r\n             return ( \r\n              <div className=\"items\">\r\n                {mydata.map(recipe => (\r\n                    <div key={recipe.name} className=\"item\">\r\n                            <img src={recipe.imgUrl} alt=\"recipe\" />\r\n                        <div className=\"contents\">\r\n                            <div className=\"content1\">\r\n                                <h4>{recipe.name}</h4>\r\n                               <span>{recipe.price}Tsh</span>\r\n                            </div>\r\n                            <div className=\"content2\">\r\n                                <p>{recipe.description}</p>\r\n                                <a href={recipe.link} className=\"external\">Read More</a>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                ))}\r\n             </div>       \r\n         );\r\n        }\r\n  \r\n    }\r\n}\r\n \r\nexport default Recipe;","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <section class=\"moses2\"> \r\n            <div class=\"moses-content2\">\r\n             <div className=\"about\">\r\n                 <h3>About Us</h3>\r\n                        <p>Nam nec tellus a odio tincidunt auctor a ornare odio. Sed non mauris vitae erat consequat auctor eu in elit. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\r\n                        <button>Menu</button>\r\n                    </div>\r\n                    <div className=\"images\">\r\n                        <img src=\"https://images.pexels.com/photos/313700/pexels-photo-313700.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" alt=\"image1\" />\r\n                        <img src=\"https://images.pexels.com/photos/1449773/pexels-photo-1449773.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"image2\"/>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react';\r\nimport logo from \"./components/images/logo.png\"\r\nclass Footer extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"footer\">\r\n                <img src={logo} alt=\"logo\" className=\"logo\" />\r\n                <p>&copy; Recipe 2020</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React from 'react'\r\nimport Nav from \"./Nav\"\r\nimport Banner from './Banner'\r\nimport Recipe from \"./Recipe\"\r\nimport About from '../About'\r\nimport Footer from '../Footer'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n             <Nav />\r\n             <Banner />\r\n             <About/>\r\n            <Recipe />\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nfunction menu() {\r\n    return (\r\n        <div>\r\n           <h1>Hello from menu</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default menu\r\n","import React from 'react';\nimport Home from \"./components/Home\"\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport Menu from \"./components/menu\"\nimport './App.css';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Router>\n              <Switch>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/Menu\" component={Menu} />\n              </Switch>  \n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}